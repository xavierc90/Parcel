"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _path() {
  const data = _interopRequireDefault(require("path"));
  _path = function () {
    return data;
  };
  return data;
}
function _plugin() {
  const data = require("@parcel/plugin");
  _plugin = function () {
    return data;
  };
  return data;
}
function _pug() {
  const data = _interopRequireDefault(require("pug"));
  _pug = function () {
    return data;
  };
  return data;
}
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
var _default = exports.default = new (_plugin().Transformer)({
  async loadConfig({
    config
  }) {
    let configFile = await config.getConfig(['.pugrc', '.pugrc.js', '.pugrc.cjs', '.pugrc.mjs', 'pug.config.js', 'pug.config.cjs', 'pug.config.mjs']);
    return configFile === null || configFile === void 0 ? void 0 : configFile.contents;
  },
  async transform({
    asset,
    config
  }) {
    const pugConfig = config !== null && config !== void 0 ? config : {};
    const content = await asset.getCode();
    const render = _pug().default.compile(content, {
      compileDebug: false,
      basedir: _path().default.dirname(asset.filePath),
      filename: asset.filePath,
      ...pugConfig,
      pretty: pugConfig.pretty || false
    });
    for (let filePath of render.dependencies) {
      asset.invalidateOnFileChange(filePath);
    }
    asset.type = 'html';
    asset.setCode(render(pugConfig.locals));
    return [asset];
  }
});